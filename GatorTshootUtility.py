import tkinter as tk
from tkinter import ttk, messagebox

# Function to handle button clicks
def show_information(topic):
    # Dictionary storing detailed information about each topic
    # Paste your info_text dictionary here
    info_text = {
    "IPConfig": (
        "IPConfig (Internet Protocol Configuration) is a command-line tool used to display and manage the IP configuration of a Windows machine.\n\n"
        "Detailed Usage:\n"
        "1. Open Command Prompt or PowerShell.\n"
        "2. Type 'ipconfig' and press Enter to display the basic IP configuration.\n"
        "3. For more details, use 'ipconfig /all' to display all IP configuration details including DNS and MAC address.\n\n"
        "Common Switches and Their Usage:\n"
        " - /all: Displays full configuration information including detailed information on all network adapters.\n"
        " - /release: Releases the current IP address obtained from the DHCP server.\n"
        " - /renew: Renews the IP address obtained from the DHCP server.\n"
        " - /flushdns: Clears the DNS resolver cache.\n\n"
        "Example Commands:\n"
        " - ipconfig\n"
        " - ipconfig /all\n"
        " - ipconfig /release\n"
        " - ipconfig /renew\n"
        " - ipconfig /flushdns\n\n"
        "Troubleshooting Tips:\n"
        "1. Check your network connection if 'ipconfig' returns no information.\n"
        "2. Use 'ipconfig /all' to diagnose issues with network adapters and IP configuration.\n"
        "3. If you encounter DNS issues, try 'ipconfig /flushdns' to clear the DNS cache.\n"
        "4. For connectivity issues, use 'ipconfig /release' followed by 'ipconfig /renew' to refresh the IP address."
    ),
    "Ping": (
        "Ping is a network utility used to test the reachability of a host on an IP network and measure the round-trip time for messages sent from the originating host to a destination computer.\n\n"
        "Detailed Usage:\n"
        "1. Open Command Prompt or PowerShell.\n"
        "2. Type 'ping [hostname or IP address]' and press Enter.\n"
        "   Example: 'ping google.com' or 'ping 8.8.8.8'\n\n"
        "Common Switches and Their Usage:\n"
        " - /t: Ping the specified host until stopped.\n"
        " - /n count: Number of echo requests to send.\n"
        " - /l size: Send buffer size.\n"
        " - /f: Set the Don't Fragment flag in the packet.\n"
        " - /i ttl: Set the Time To Live.\n"
        " - /r count: Record route for count hops.\n"
        " - /s count: Timestamp for count hops.\n"
        " - /k: Use the specified TTL value.\n"
        " - /a: Resolve addresses to hostnames.\n\n"
        "Example Commands:\n"
        " - ping google.com\n"
        " - ping 8.8.8.8 /t\n"
        " - ping google.com /n 10\n"
        " - ping google.com /l 1000\n\n"
        "Troubleshooting Tips:\n"
        "1. Use 'ping [hostname or IP address]' to check connectivity to a remote host.\n"
        "2. If the ping fails, ensure that the host is reachable and check your network connection.\n"
        "3. Use 'ping -t' to continuously ping a host and monitor network stability.\n"
        "4. If you receive high latency or packet loss, check your network hardware and connections.\n"
        "5. Use 'ping [hostname or IP address] /a' to resolve the IP address to a hostname and verify the host's name.\n\n"
        "Advanced Troubleshooting:\n"
        "1. Use 'ping -l [size]' to test with different buffer sizes and identify if packet size affects connectivity.\n"
        "2. Use 'ping -r [count]' to record the route taken by the packets and identify routing issues.\n"
        "3. Use 'ping -s [count]' to timestamp packets and analyze delays and latency in the network path.\n"
    ),
    "Tracert": (
        "Tracert (Trace Route) is a command-line tool used to trace the path packets take from your computer to a destination host. It helps in diagnosing network routing issues.\n\n"
        "Detailed Usage:\n"
        "1. Open Command Prompt or PowerShell.\n"
        "2. Type 'tracert [hostname or IP address]' and press Enter.\n"
        "   Example: 'tracert google.com' or 'tracert 8.8.8.8'\n\n"
        "Common Switches and Their Usage:\n"
        " - /d: Don't resolve addresses to hostnames.\n"
        " - /h maximum_hops: Maximum number of hops to search for the target.\n"
        " - /j host-list: Loose source route along the list of hosts.\n"
        " - /w timeout: Wait timeout milliseconds for each reply.\n\n"
        "Example Commands:\n"
        " - tracert google.com\n"
        " - tracert 8.8.8.8 /d\n"
        " - tracert 8.8.8.8 /h 20\n\n"
        "Troubleshooting Tips:\n"
        "1. Use 'tracert [hostname or IP address]' to determine the path packets take to a destination.\n"
        "2. If tracert fails, it may indicate network issues or the destination may be unreachable.\n"
        "3. Analyze the output to identify where packets are being dropped or delayed.\n"
        "4. Use 'tracert /d' to avoid DNS resolution delays and get faster results.\n\n"
        "Advanced Troubleshooting:\n"
        "1. Use 'tracert /h [maximum_hops]' to increase the maximum number of hops to trace longer routes.\n"
        "2. Use 'tracert /j [host-list]' to test loose source routing and identify routing problems.\n"
        "3. Analyze each hop in the output to locate potential issues in the network path.\n"
    ),
    "Route": (
        "Route is a command-line tool used to view and manipulate the IP routing table on a Windows machine.\n\n"
        "Detailed Usage:\n"
        "1. Open Command Prompt or PowerShell.\n"
        "2. Type 'route [command] [parameters]' and press Enter.\n\n"
        "Common Commands:\n"
        " - print: Display the current IP routing table.\n"
        " - add: Add a new route to the routing table.\n"
        " - delete: Remove a route from the routing table.\n"
        " - change: Modify an existing route.\n\n"
        "Example Commands:\n"
        " - route print\n"
        " - route add 192.168.1.0 mask 255.255.255.0 192.168.0.1\n"
        " - route delete 192.168.1.0\n"
        " - route change 192.168.1.0 mask 255.255.255.0 192.168.0.2\n\n"
        "Troubleshooting Tips:\n"
        "1. Use 'route print' to view and verify the current routing table.\n"
        "2. If you encounter routing issues, check the routing table for incorrect or missing routes.\n"
        "3. Use 'route add' to add missing routes or correct incorrect routes.\n"
        "4. If routes are not persisting after a reboot, check for issues with persistent route settings.\n\n"
        "Advanced Troubleshooting:\n"
        "1. Verify the route metrics to ensure routes are being used as intended.\n"
        "2. Use 'route change' to adjust route settings and resolve conflicts or improve routing efficiency.\n"
        "3. Review the routing table in combination with network topology to identify potential routing issues.\n"
    ),
    "ARP": (
        "ARP (Address Resolution Protocol) is a network protocol used to map an IP address to a MAC address on a local network.\n\n"
        "Detailed Usage:\n"
        "1. Open Command Prompt or PowerShell.\n"
        "2. Type 'arp [command] [parameters]' and press Enter.\n\n"
        "Common Commands:\n"
        " - -a: Display the ARP table.\n"
        " - -d [IP address]: Delete a specific ARP entry.\n"
        " - -s [IP address] [MAC address]: Add a static ARP entry.\n\n"
        "Example Commands:\n"
        " - arp -a\n"
        " - arp -d 192.168.1.1\n"
        " - arp -s 192.168.1.1 00-1A-2B-3C-4D-5E\n\n"
        "Troubleshooting Tips:\n"
        "1. Use 'arp -a' to display the current ARP table and verify the mapping of IP addresses to MAC addresses.\n"
        "2. If you encounter issues with IP to MAC mapping, use 'arp -d' to clear incorrect entries.\n"
        "3. Use 'arp -s' to add static mappings for critical devices to avoid resolution issues.\n\n"
        "Advanced Troubleshooting:\n"
        "1. Check for ARP cache poisoning attacks by reviewing unexpected ARP entries.\n"
        "2. Use network monitoring tools to analyze ARP traffic and diagnose issues with address resolution.\n"
        "3. Verify ARP cache consistency across multiple devices on the network for accurate mapping.\n"
    ),
    "Hostname": (
        "Hostname is a command used to display or set the system's hostname, which is used to identify a computer on a network.\n\n"
        "Detailed Usage:\n"
        "1. Open Command Prompt or PowerShell.\n"
        "2. Type 'hostname' and press Enter to display the current hostname.\n"
        "3. To change the hostname, use 'wmic computersystem where name='%computername%' call rename name='NewName'.\n\n"
        "Example Commands:\n"
        " - hostname\n"
        " - wmic computersystem where name='%computername%' call rename name='NewName'\n\n"
        "Troubleshooting Tips:\n"
        "1. Use 'hostname' to verify the current system name and ensure it matches network naming conventions.\n"
        "2. If network issues arise, check if hostname resolution is properly configured in DNS.\n"
        "3. Ensure hostname changes are reflected across the network and update any relevant records.\n\n"
        "Advanced Troubleshooting:\n"
        "1. Verify that the new hostname is correctly registered in DNS and other network services.\n"
        "2. Check for any conflicts with existing hostnames on the network.\n"
        "3. Review network configuration to ensure proper hostname resolution and address mapping.\n"
    ),
    "Telnet": (
        "Telnet is a network protocol used to provide a command-line interface for communication with a remote device or server.\n\n"
        "Detailed Usage:\n"
        "1. Open Command Prompt or PowerShell.\n"
        "2. Type 'telnet [hostname or IP address] [port]' and press Enter.\n"
        "   Example: 'telnet google.com 80' or 'telnet 192.168.1.1 23'\n\n"
        "Common Commands:\n"
        " - open [hostname] [port]: Connect to a remote host.\n"
        " - close: Close the current Telnet session.\n"
        " - quit: Exit the Telnet client.\n\n"
        "Example Commands:\n"
        " - telnet google.com 80\n"
        " - telnet 192.168.1.1 23\n\n"
        "Troubleshooting Tips:\n"
        "1. Use Telnet to test connectivity to a remote service on a specific port.\n"
        "2. If the connection fails, check for network issues or firewall rules blocking the port.\n"
        "3. Ensure the remote service is running and listening on the specified port.\n\n"
        "Advanced Troubleshooting:\n"
        "1. Use network monitoring tools to analyze traffic and diagnose issues with Telnet connections.\n"
        "2. Verify that the Telnet client and server configurations are compatible.\n"
        "3. Check for any port conflicts or restrictions on the network that may affect Telnet connectivity.\n"
    ),
    "SSH": (
        "SSH (Secure Shell) is a protocol used to securely access and manage network devices and servers remotely.\n\n"
        "Detailed Usage:\n"
        "1. Open Command Prompt or PowerShell.\n"
        "2. Type 'ssh [user]@[hostname or IP address]' and press Enter.\n"
        "   Example: 'ssh user@google.com' or 'ssh user@192.168.1.1'\n\n"
        "Common Commands:\n"
        " - ssh [user]@[hostname]: Connect to a remote host.\n"
        " - scp [file] [user]@[hostname]:[path]: Copy files to/from a remote host.\n"
        " - sftp [user]@[hostname]: Open an SFTP session for file transfers.\n\n"
        "Example Commands:\n"
        " - ssh user@google.com\n"
        " - scp file.txt user@192.168.1.1:/remote/path\n"
        " - sftp user@192.168.1.1\n\n"
        "Troubleshooting Tips:\n"
        "1. Verify the SSH server is running on the remote host and listening on the default port (22).\n"
        "2. Check network connectivity and firewall rules that may block SSH traffic.\n"
        "3. Ensure the correct username and password or private key are used for authentication.\n\n"
        "Advanced Troubleshooting:\n"
        "1. Use SSH client options to debug connection issues (e.g., 'ssh -v' for verbose output).\n"
        "2. Verify that the SSH server configuration allows connections from the client’s IP address.\n"
        "3. Check for any issues with SSH key pairs and ensure they are correctly configured.\n"
    ),
    "NSLookup": (
        "NSLookup (Name Server Lookup) is a network utility used to query Domain Name System (DNS) servers to obtain domain name or IP address information.\n\n"
        "Detailed Usage:\n"
        "1. Open Command Prompt or PowerShell.\n"
        "2. Type 'nslookup [domain]' and press Enter.\n"
        "   Example: 'nslookup google.com' or 'nslookup 8.8.8.8'\n\n"
        "Common Commands:\n"
        " - [domain]: Query DNS for a domain name or IP address.\n"
        " - set type=[type]: Set the query type (e.g., A, AAAA, MX, etc.).\n"
        " - server [DNS server]: Specify a DNS server to use for the query.\n\n"
        "Example Commands:\n"
        " - nslookup google.com\n"
        " - nslookup 8.8.8.8\n"
        " - nslookup -type=MX google.com\n"
        " - nslookup server 8.8.8.8\n\n"
        "Troubleshooting Tips:\n"
        "1. Use 'nslookup [domain]' to verify DNS resolution for a domain or IP address.\n"
        "2. If the query fails, check if the DNS server is reachable and responding.\n"
        "3. Use 'set type=[type]' to query for specific DNS record types and troubleshoot DNS issues.\n\n"
        "Advanced Troubleshooting:\n"
        "1. Test different DNS servers to identify potential issues with a specific DNS provider.\n"
        "2. Analyze DNS query responses for errors or inconsistencies in DNS records.\n"
        "3. Use network tools to trace DNS query paths and diagnose any routing issues.\n"
    ),
    "GetMac": (
        "GetMac is a command-line tool used to display the MAC address of network interfaces on a Windows machine.\n\n"
        "Detailed Usage:\n"
        "1. Open Command Prompt or PowerShell.\n"
        "2. Type 'getmac' and press Enter to display the MAC addresses of network interfaces.\n\n"
        "Common Commands:\n"
        " - /v: Display additional details about the network adapters.\n"
        " - /fo [format]: Specify the output format (e.g., table, list, csv).\n\n"
        "Example Commands:\n"
        " - getmac\n"
        " - getmac /v\n"
        " - getmac /fo csv\n\n"
        "Troubleshooting Tips:\n"
        "1. Use 'getmac' to verify the MAC addresses of your network adapters.\n"
        "2. If you encounter network issues, ensure that the correct MAC address is being used.\n"
        "3. Use '/v' to view detailed information if there are multiple network adapters.\n\n"
        "Advanced Troubleshooting:\n"
        "1. Verify that the MAC addresses match the expected hardware configurations.\n"
        "2. Check for any discrepancies between the MAC addresses reported and actual hardware.\n"
        "3. Use additional network diagnostic tools to further analyze network adapter issues.\n"
    ),
    "Systeminfo.exe": (
        "Systeminfo.exe is a command-line utility used to display detailed configuration information about a Windows machine.\n\n"
        "Detailed Usage:\n"
        "1. Open Command Prompt or PowerShell.\n"
        "2. Type 'systeminfo' and press Enter to display system configuration details.\n\n"
        "Common Commands:\n"
        " - /fo [format]: Specify the output format (e.g., table, list, csv).\n"
        " - /s [computer]: Query the information for a remote computer.\n"
        " - /u [user]: Specify the user credentials for the query.\n\n"
        "Example Commands:\n"
        " - systeminfo\n"
        " - systeminfo /fo csv\n"
        " - systeminfo /s remoteComputer /u username\n\n"
        "Troubleshooting Tips:\n"
        "1. Use 'systeminfo' to gather detailed information about system configuration and environment.\n"
        "2. If system information is incomplete, check for permissions and access issues.\n"
        "3. Use '/fo' to format the output for easier analysis and integration with other tools.\n\n"
        "Advanced Troubleshooting:\n"
        "1. Review detailed system information to diagnose hardware and software issues.\n"
        "2. Use the output to verify system configurations and identify discrepancies or misconfigurations.\n"
        "3. Integrate with other diagnostic tools to get a comprehensive view of system health.\n"
    ),
    "Netstat": (
        "Netstat (Network Statistics) is a command-line tool used to display active network connections and listening ports on a Windows machine.\n\n"
        "Detailed Usage:\n"
        "1. Open Command Prompt or PowerShell.\n"
        "2. Type 'netstat [options]' and press Enter.\n\n"
        "Common Options:\n"
        " - -a: Display all active connections and listening ports.\n"
        " - -n: Show addresses and port numbers in numerical form.\n"
        " - -o: Display the owning process ID associated with each connection.\n"
        " - -s: Display statistics by protocol.\n"
        " - -r: Display the routing table.\n\n"
        "Example Commands:\n"
        " - netstat -a\n"
        " - netstat -n\n"
        " - netstat -o\n"
        " - netstat -s\n\n"
        "Troubleshooting Tips:\n"
        "1. Use 'netstat -a' to view all active connections and listening ports.\n"
        "2. If you encounter issues with network connections, use 'netstat -o' to identify the process IDs.\n"
        "3. Use 'netstat -s' to view protocol-specific statistics and diagnose network performance issues.\n\n"
        "Advanced Troubleshooting:\n"
        "1. Analyze the output to identify unauthorized or suspicious connections.\n"
        "2. Use 'netstat -r' to review and troubleshoot routing table issues.\n"
        "3. Integrate with other network diagnostic tools to get a comprehensive view of network activity.\n"
    ),
    "SFC": (
        "SFC (System File Checker) is a command-line tool used to scan and repair corrupted system files on a Windows machine.\n\n"
        "Detailed Usage:\n"
        "1. Open Command Prompt with administrative privileges.\n"
        "2. Type 'sfc /scannow' and press Enter to start the scan and repair process.\n\n"
        "Common Switches:\n"
        " - /scannow: Scan all protected system files and replace corrupted files.\n"
        " - /verifyonly: Verify the integrity of system files without repairing.\n"
        " - /scanfile=[path]: Scan a specific file.\n"
        " - /verifyfile=[path]: Verify a specific file.\n\n"
        "Example Commands:\n"
        " - sfc /scannow\n"
        " - sfc /verifyonly\n"
        " - sfc /scanfile=C:\\Windows\\System32\\somefile.dll\n\n"
        "Troubleshooting Tips:\n"
        "1. Use 'sfc /scannow' to repair corrupted system files that may be causing system instability.\n"
        "2. If SFC encounters issues, review the log file located at %windir%\\Logs\\CBS\\CBS.log for details.\n"
        "3. Use 'DISM' if SFC cannot fix some issues.\n\n"
        "Advanced Troubleshooting:\n"
        "1. Review the SFC log to identify specific files that could not be repaired.\n"
        "2. Use 'DISM /Online /Cleanup-Image /RestoreHealth' to repair the system image and resolve SFC issues.\n"
        "3. Analyze the underlying cause of file corruption, such as hardware issues or malware.\n"
    ),
    "DISM": (
        "DISM (Deployment Imaging Service and Management Tool) is a command-line tool used to service and manage Windows images, including repair of system files.\n\n"
        "Detailed Usage:\n"
        "1. Open Command Prompt with administrative privileges.\n"
        "2. Type 'dism [options]' and press Enter.\n\n"
        "Common Commands:\n"
        " - /Online: Target the running operating system.\n"
        " - /Cleanup-Image: Perform cleanup and recovery tasks on the image.\n"
        " - /RestoreHealth: Scan and repair corruption in the system image.\n"
        " - /CheckHealth: Check for corruption but do not repair.\n\n"
        "Example Commands:\n"
        " - dism /Online /Cleanup-Image /RestoreHealth\n"
        " - dism /Online /Cleanup-Image /CheckHealth\n\n"
        "Troubleshooting Tips:\n"
        "1. Use 'dism /Online /Cleanup-Image /RestoreHealth' to repair system image corruption.\n"
        "2. If DISM encounters issues, check the log file located at %windir%\\Logs\\DISM\\dism.log.\n"
        "3. Ensure that Windows Update service is running as DISM may rely on it to download repair files.\n\n"
        "Advanced Troubleshooting:\n"
        "1. Use 'dism /Online /Cleanup-Image /ScanHealth' to identify corruption without making repairs.\n"
        "2. Analyze DISM logs for errors and address any underlying issues causing image corruption.\n"
        "3. Verify the health of the system using additional tools like SFC or third-party utilities.\n"
    ),
    "Shutdown": (
        "Shutdown is a command-line tool used to shut down or restart a Windows machine.\n\n"
        "Detailed Usage:\n"
        "1. Open Command Prompt or PowerShell.\n"
        "2. Type 'shutdown [options]' and press Enter.\n\n"
        "Common Commands:\n"
        " - /s: Shut down the computer.\n"
        " - /r: Restart the computer.\n"
        " - /t [seconds]: Set a time delay before shutdown or restart.\n"
        " - /f: Force running applications to close.\n"
        " - /l: Log off the current user.\n\n"
        "Example Commands:\n"
        " - shutdown /s /t 60\n"
        " - shutdown /r /f\n"
        " - shutdown /l\n\n"
        "Troubleshooting Tips:\n"
        "1. Use 'shutdown /s' to initiate a system shutdown or 'shutdown /r' to restart.\n"
        "2. If the system does not shut down or restart, check for pending updates or applications preventing the process.\n"
        "3. Use '/f' to force close applications that may be blocking shutdown.\n\n"
        "Advanced Troubleshooting:\n"
        "1. Analyze system logs to identify any errors or issues related to shutdown or restart.\n"
        "2. Use additional tools to diagnose hardware or software conflicts affecting system power operations.\n"
        "3. Review system settings and configurations to ensure proper shutdown and restart functionality.\n"
    ),
    "CHKDSK": (
        "CHKDSK (Check Disk) is a command-line utility used to check the integrity of a disk and fix file system errors and bad sectors.\n\n"
        "Detailed Usage:\n"
        "1. Open Command Prompt with administrative privileges.\n"
        "2. Type 'chkdsk [drive:] [parameters]' and press Enter.\n\n"
        "Common Parameters:\n"
        " - /f: Fix errors on the disk.\n"
        " - /r: Locate bad sectors and recover readable information.\n"
        " - /x: Force the volume to dismount first.\n"
        " - /b: Re-evaluate bad clusters on the volume.\n\n"
        "Example Commands:\n"
        " - chkdsk C: /f\n"
        " - chkdsk D: /r\n"
        " - chkdsk E: /x\n\n"
        "Troubleshooting Tips:\n"
        "1. Use 'chkdsk [drive:] /f' to fix file system errors on the specified disk.\n"
        "2. If CHKDSK finds errors, use '/r' to locate bad sectors and recover data.\n"
        "3. Use '/x' to force dismount the volume if needed.\n\n"
        "Advanced Troubleshooting:\n"
        "1. Analyze CHKDSK logs for detailed information about detected issues and repair processes.\n"
        "2. Review disk health using SMART tools and diagnostics in conjunction with CHKDSK results.\n"
        "3. Address any underlying hardware issues that may cause recurring disk errors or bad sectors.\n"
    ),
    "NetSH": (
        "NetSH (Network Shell) is a command-line scripting utility used to display and modify network configuration settings.\n\n"
        "Detailed Usage:\n"
        "1. Open Command Prompt with administrative privileges.\n"
        "2. Type 'netsh [context] [command] [parameters]' and press Enter.\n\n"
        "Common Contexts and Commands:\n"
        " - wlan: Manage wireless LAN settings.\n"
        " - interface: Manage network interfaces.\n"
        " - firewall: Configure Windows Firewall settings.\n"
        " - int ip: Configure IP settings.\n\n"
        "Example Commands:\n"
        " - netsh wlan show profiles\n"
        " - netsh interface ip show config\n"
        " - netsh firewall show state\n\n"
        "Troubleshooting Tips:\n"
        "1. Use 'netsh wlan show profiles' to view saved wireless network profiles.\n"
        "2. Use 'netsh interface ip show config' to verify IP settings for network interfaces.\n"
        "3. Use 'netsh firewall show state' to check current firewall settings and rules.\n\n"
        "Advanced Troubleshooting:\n"
        "1. Use 'netsh' commands to reset network settings if encountering connectivity issues.\n"
        "2. Analyze specific NetSH context and commands for in-depth network configuration diagnostics.\n"
        "3. Integrate with other network diagnostic tools to resolve complex networking problems.\n"
    ),
    "DNS": (
        "DNS (Domain Name System) commands are used to configure and troubleshoot DNS settings and resolve domain names to IP addresses.\n\n"
        "Detailed Usage:\n"
        "1. Open Command Prompt or PowerShell.\n"
        "2. Use DNS-related commands to manage DNS settings or troubleshoot resolution issues.\n\n"
        "Common Commands:\n"
        " - ipconfig /flushdns: Clear the DNS resolver cache.\n"
        " - ipconfig /registerdns: Register the DNS record for the computer.\n"
        " - ipconfig /displaydns: Display the DNS resolver cache.\n\n"
        "Example Commands:\n"
        " - ipconfig /flushdns\n"
        " - ipconfig /registerdns\n"
        " - ipconfig /displaydns\n\n"
        "Troubleshooting Tips:\n"
        "1. Use 'ipconfig /flushdns' to clear the DNS cache if encountering resolution issues.\n"
        "2. Use 'ipconfig /registerdns' to update DNS records if there are issues with name resolution.\n"
        "3. Use 'ipconfig /displaydns' to view cached DNS entries and diagnose problems.\n\n"
        "Advanced Troubleshooting:\n"
        "1. Review DNS settings and configuration on both client and server sides.\n"
        "2. Analyze DNS traffic using network monitoring tools to identify issues.\n"
        "3. Check for DNS server health and configuration issues affecting resolution.\n"
    ),
    "DHCP": (
        "DHCP (Dynamic Host Configuration Protocol) commands are used to manage and troubleshoot IP address assignment and DHCP settings.\n\n"
        "Detailed Usage:\n"
        "1. Open Command Prompt or PowerShell.\n"
        "2. Use DHCP-related commands to view or configure DHCP settings.\n\n"
        "Common Commands:\n"
        " - ipconfig /release: Release the current IP address.\n"
        " - ipconfig /renew: Renew the IP address from the DHCP server.\n"
        " - ipconfig /all: Display detailed IP configuration information, including DHCP settings.\n\n"
        "Example Commands:\n"
        " - ipconfig /release\n"
        " - ipconfig /renew\n"
        " - ipconfig /all\n\n"
        "Troubleshooting Tips:\n"
        "1. Use 'ipconfig /release' and 'ipconfig /renew' to troubleshoot IP address assignment issues.\n"
        "2. Use 'ipconfig /all' to verify DHCP server settings and lease information.\n"
        "3. Ensure the DHCP server is functioning correctly and has available IP addresses.\n\n"
        "Advanced Troubleshooting:\n"
        "1. Analyze DHCP server logs for errors and performance issues.\n"
        "2. Use network monitoring tools to trace DHCP traffic and diagnose assignment issues.\n"
        "3. Review network configuration to ensure proper DHCP relay and assignment.\n"
    ),
    "Services.MSC": (
        "Services.MSC is a Microsoft Management Console (MMC) application used to manage and configure Windows services.\n\n"
        "Detailed Usage:\n"
        "1. Open Run dialog (Win + R).\n"
        "2. Type 'services.msc' and press Enter to open the Services console.\n\n"
        "Common Tasks:\n"
        " - Start: Start a service that is stopped.\n"
        " - Stop: Stop a running service.\n"
        " - Restart: Restart a service to apply changes or fix issues.\n"
        " - Properties: View or modify service settings and dependencies.\n\n"
        "Example Tasks:\n"
        " - Open Services.MSC and manage specific services as needed.\n\n"
        "Troubleshooting Tips:\n"
        "1. Use Services.MSC to check the status of services and restart them if necessary.\n"
        "2. Verify that critical services are running and configured correctly.\n"
        "3. Check for dependencies and troubleshoot any related services that may affect performance.\n\n"
        "Advanced Troubleshooting:\n"
        "1. Review service logs and error messages to diagnose issues.\n"
        "2. Use event logs to find details about service failures or performance issues.\n"
        "3. Ensure service configurations align with system requirements and security policies.\n"
    ),
    "Control Panel": (
        "The Control Panel is a Windows utility used to manage system settings and configurations.\n\n"
        "Detailed Usage:\n"
        "1. Open Run dialog (Win + R).\n"
        "2. Type 'control' and press Enter to open the Control Panel.\n\n"
        "Common Tasks:\n"
        " - System and Security: Manage system settings, updates, and security features.\n"
        " - Network and Sharing Center: Configure network settings and troubleshoot network issues.\n"
        " - Programs and Features: Uninstall or modify installed programs.\n"
        " - User Accounts: Manage user accounts and permissions.\n\n"
        "Example Tasks:\n"
        " - Open Control Panel and navigate to the desired settings or tools.\n\n"
        "Troubleshooting Tips:\n"
        "1. Use Control Panel to access and adjust system settings and configurations.\n"
        "2. Verify that system settings align with user needs and security requirements.\n"
        "3. Use available tools within Control Panel to troubleshoot common system issues.\n\n"
        "Advanced Troubleshooting:\n"
        "1. Review system settings and configurations for inconsistencies or errors.\n"
        "2. Use event logs to diagnose issues related to system settings or configurations.\n"
        "3. Ensure proper user account permissions and system security settings are enforced.\n"
    ),
    "Network and Sharing Center": (
        "The Network and Sharing Center is a Windows utility used to view and manage network connections and settings.\n\n"
        "Detailed Usage:\n"
        "1. Open Control Panel and select 'Network and Sharing Center.'\n\n"
        "Common Tasks:\n"
        " - View Network Status: Check the status of network connections.\n"
        " - Change Adapter Settings: Modify network adapter properties and settings.\n"
        " - Troubleshoot Problems: Run network troubleshooting tools.\n\n"
        "Example Tasks:\n"
        " - Open Network and Sharing Center and review network connections and settings.\n\n"
        "Troubleshooting Tips:\n"
        "1. Use Network and Sharing Center to diagnose network connectivity issues.\n"
        "2. Verify network settings and connection statuses.\n"
        "3. Use built-in troubleshooting tools to resolve network problems.\n\n"
        "Advanced Troubleshooting:\n"
        "1. Analyze network settings and configurations for inconsistencies or errors.\n"
        "2. Use additional network diagnostic tools to get a detailed view of network issues.\n"
        "3. Review network adapter settings and driver statuses for potential problems.\n"
    ),
    "VPN Creation": (
        "VPN Creation involves setting up a Virtual Private Network to securely connect to a remote network over the internet.\n\n"
        "Detailed Usage:\n"
        "1. Open Control Panel and go to 'Network and Sharing Center.'\n"
        "2. Select 'Set up a new connection or network.'\n"
        "3. Choose 'Connect to a workplace' and follow the setup wizard to configure the VPN.\n\n"
        "Common Steps:\n"
        " - Enter VPN server address and connection type.\n"
        " - Provide authentication credentials.\n"
        " - Configure additional settings if needed.\n\n"
        "Example Steps:\n"
        " - Open 'Set up a new connection or network' and follow the wizard to create a VPN.\n\n"
        "Troubleshooting Tips:\n"
        "1. Verify VPN server address and credentials are correct.\n"
        "2. Ensure network connectivity and check for firewall or security software blocking the VPN connection.\n"
        "3. Use built-in troubleshooting tools to diagnose and resolve VPN issues.\n\n"
        "Advanced Troubleshooting:\n"
        "1. Review VPN logs for connection errors or issues.\n"
        "2. Verify VPN configuration settings and compatibility with the server.\n"
        "3. Check for updates or patches for VPN client and server software.\n"
    ),
    "Advanced System Settings": (
        "Advanced System Settings allows users to configure advanced system parameters and performance settings on a Windows machine.\n\n"
        "Detailed Usage:\n"
        "1. Open Control Panel and go to 'System and Security.'\n"
        "2. Select 'System' and click 'Advanced system settings' on the left pane.\n\n"
        "Common Settings:\n"
        " - Performance: Adjust settings for visual effects and performance.\n"
        " - Startup and Recovery: Configure startup and recovery options.\n"
        " - User Profiles: Manage user profiles and settings.\n\n"
        "Example Tasks:\n"
        " - Open 'Advanced system settings' and adjust settings as needed.\n\n"
        "Troubleshooting Tips:\n"
        "1. Use Advanced System Settings to adjust performance settings and troubleshoot system performance issues.\n"
        "2. Review startup and recovery settings to ensure proper system boot and recovery operations.\n"
        "3. Verify user profile settings and configurations.\n\n"
        "Advanced Troubleshooting:\n"
        "1. Analyze system performance logs and settings for issues.\n"
        "2. Use performance monitoring tools to identify and resolve performance bottlenecks.\n"
        "3. Ensure that system settings align with performance and security requirements.\n"
    ),
    "System Information": (
        "System Information is a tool used to gather and view detailed information about the hardware and software configuration of a Windows machine.\n\n"
        "Detailed Usage:\n"
        "1. Open Run dialog (Win + R).\n"
        "2. Type 'msinfo32' and press Enter to open System Information.\n\n"
        "Common Sections:\n"
        " - System Summary: Overview of the system's hardware and software.\n"
        " - Hardware Resources: Information about hardware resource allocation.\n"
        " - Components: Details about installed hardware components.\n"
        " - Software Environment: Information about software and drivers.\n\n"
        "Example Tasks:\n"
        " - Open System Information and review detailed system reports.\n\n"
        "Troubleshooting Tips:\n"
        "1. Use System Information to gather detailed hardware and software information for troubleshooting.\n"
        "2. Analyze system summary for discrepancies or configuration issues.\n"
        "3. Use detailed component and software environment information to diagnose specific issues.\n\n"
        "Advanced Troubleshooting:\n"
        "1. Cross-reference System Information with other diagnostic tools to identify complex issues.\n"
        "2. Review hardware resource allocation and conflicts for potential problems.\n"
        "3. Analyze software environment for issues related to installed applications and drivers.\n"
    ),
    "Telnet": (
        "Telnet is a command-line tool used to connect to remote servers and devices over the Telnet protocol.\n\n"
        "Detailed Usage:\n"
        "1. Open Command Prompt or PowerShell.\n"
        "2. Type 'telnet [hostname or IP address] [port]' and press Enter.\n\n"
        "Common Commands:\n"
        " - open [hostname or IP address] [port]: Connect to a remote host.\n"
        " - close: Close the Telnet session.\n"
        " - quit: Exit the Telnet client.\n\n"
        "Example Commands:\n"
        " - telnet example.com 80\n"
        " - telnet 192.168.1.1 23\n\n"
        "Troubleshooting Tips:\n"
        "1. Use 'telnet' to test connectivity to a remote server or device.\n"
        "2. Verify that the Telnet service is enabled and running on the remote host.\n"
        "3. Ensure that firewalls or security software are not blocking Telnet traffic.\n\n"
        "Advanced Troubleshooting:\n"
        "1. Analyze Telnet connection logs and error messages for issues.\n"
        "2. Verify port availability and service configuration on the remote host.\n"
        "3. Use additional network diagnostic tools to diagnose connectivity problems.\n"
    ),
    "SSH": (
        "SSH (Secure Shell) is a network protocol used to securely connect to remote servers and devices.\n\n"
        "Detailed Usage:\n"
        "1. Open Command Prompt or PowerShell.\n"
        "2. Type 'ssh [user@hostname or IP address]' and press Enter.\n\n"
        "Common Commands:\n"
        " - ssh [user@hostname or IP address]: Connect to a remote server using SSH.\n"
        " - exit: Close the SSH session.\n\n"
        "Example Commands:\n"
        " - ssh user@example.com\n"
        " - ssh admin@192.168.1.1\n\n"
        "Troubleshooting Tips:\n"
        "1. Use 'ssh' to connect to a remote server and verify connectivity.\n"
        "2. Ensure that the SSH server is running and accessible on the remote host.\n"
        "3. Check firewall and security settings to ensure SSH traffic is allowed.\n\n"
        "Advanced Troubleshooting:\n"
        "1. Review SSH connection logs and error messages for issues.\n"
        "2. Verify SSH server configuration and authentication settings.\n"
        "3. Use additional network diagnostic tools to troubleshoot connectivity problems.\n"
    ),
    "NSLookup": (
        "NSLookup (Name Server Lookup) is a command-line tool used to query DNS servers and obtain domain name or IP address information.\n\n"
        "Detailed Usage:\n"
        "1. Open Command Prompt or PowerShell.\n"
        "2. Type 'nslookup [domain or IP address]' and press Enter.\n\n"
        "Common Commands:\n"
        " - nslookup [domain]: Query DNS for the IP address of a domain.\n"
        " - nslookup [IP address]: Query DNS for the domain name associated with an IP address.\n"
        " - set type=[record type]: Specify the type of DNS record to query.\n\n"
        "Example Commands:\n"
        " - nslookup example.com\n"
        " - nslookup 192.168.1.1\n"
        " - nslookup -type=mx example.com\n\n"
        "Troubleshooting Tips:\n"
        "1. Use 'nslookup' to verify DNS resolution for a domain or IP address.\n"
        "2. Check DNS server settings and ensure they are functioning correctly.\n"
        "3. Use 'set type=[record type]' to query specific DNS records and troubleshoot issues.\n\n"
        "Advanced Troubleshooting:\n"
        "1. Analyze DNS query results and error messages for issues.\n"
        "2. Review DNS server logs and configuration for potential problems.\n"
        "3. Use additional diagnostic tools to cross-check DNS resolution results.\n"
    ),
    "GetMac": (
        "GetMac is a command-line tool used to display the MAC addresses of network interfaces on a Windows machine.\n\n"
        "Detailed Usage:\n"
        "1. Open Command Prompt or PowerShell.\n"
        "2. Type 'getmac [options]' and press Enter.\n\n"
        "Common Options:\n"
        " - /v: Display detailed information about each network adapter.\n"
        " - /fo [format]: Specify the output format (e.g., table, list, or csv).\n\n"
        "Example Commands:\n"
        " - getmac /v\n"
        " - getmac /fo csv\n\n"
        "Troubleshooting Tips:\n"
        "1. Use 'getmac' to view MAC addresses of network adapters and ensure proper network interface configuration.\n"
        "2. Verify that the correct MAC address is associated with each network adapter.\n"
        "3. Use the output to diagnose network interface issues or conflicts.\n\n"
        "Advanced Troubleshooting:\n"
        "1. Analyze MAC address changes or conflicts in network adapter settings.\n"
        "2. Use additional network diagnostic tools to verify network interface health and connectivity.\n"
        "3. Check for hardware issues that may affect MAC address reporting or network performance.\n"
    ),
    "chkdsk": (
        "Chkdsk (Check Disk) is a command-line utility in Windows that checks the file system and file system metadata of a volume for logical and physical errors.\n\n"
        "Detailed Usage:\n"
        "1. Open Command Prompt with administrative privileges (Run as Administrator).\n"
        "2. Type 'chkdsk [drive:] [parameters]' and press Enter.\n"
        "   Example: 'chkdsk C: /f /r'\n\n"
        "Common Switches and Their Usage:\n"
        " - /f: Fixes errors on the disk. If the disk is in use, you will be prompted to schedule the check on the next restart.\n"
        " - /r: Locates bad sectors and recovers readable information. Implies /f.\n"
        " - /x: Forces the volume to dismount first, if necessary. All open handles to the volume are invalidated. Implies /f.\n"
        " - /i: Performs a less vigorous check of index entries. This option is only available for NTFS volumes.\n"
        " - /c: Skips checking of cycles within the folder structure. This option is only available for NTFS volumes.\n"
        " - /b: Clears the list of bad clusters on the volume and rescans all allocated and free clusters for errors. Implies /r. This option is only available for NTFS volumes.\n\n"
        "Example Commands:\n"
        " - chkdsk C:\n"
        " - chkdsk C: /f\n"
        " - chkdsk C: /r\n"
        " - chkdsk D: /x\n"
        " - chkdsk E: /i\n\n"
        "Troubleshooting Tips:\n"
        "1. **Run chkdsk /f**: If you encounter disk errors or corruption, run 'chkdsk C: /f'. This will check for file system errors and attempt to fix them. You may need to restart your computer if the drive is in use.\n"
        "2. **Run chkdsk /r**: For physical disk issues or bad sectors, use 'chkdsk C: /r'. This will locate and attempt to recover data from bad sectors, which can take a longer time to complete.\n"
        "3. **Check Disk Status**: If 'chkdsk' reports that it needs to lock the volume or requires a restart, follow the prompts to schedule the check on the next reboot.\n"
        "4. **Review Results**: After the check completes, review the results for any issues that couldn't be fixed. The report will indicate whether the file system was repaired or if additional action is required.\n"
        "5. **Backup Important Data**: Before running 'chkdsk' with /f or /r, ensure you have backups of important data. While 'chkdsk' is generally safe, there is a risk of data loss if the drive is severely corrupted.\n\n"
        "Advanced Troubleshooting:\n"
        "1. **Disk Health Monitoring**: Use additional tools like 'S.M.A.R.T.' monitoring software to check the health of your disk drives, as 'chkdsk' may not detect all types of hardware issues.\n"
        "2. **Analyze Disk Performance**: If you experience slow disk performance, running 'chkdsk' can identify file system issues, but consider using performance monitoring tools to diagnose other potential problems such as fragmentation or hardware failures.\n"
        "3. **Repair Disk Errors in Safe Mode**: If 'chkdsk' cannot complete due to active system files or processes, boot into Safe Mode and run the command to perform repairs with minimal interference from other software.\n"
        "4. **Use Disk Management Tools**: If 'chkdsk' reports unfixable issues, you may need to use more advanced disk management and repair tools or consider replacing the disk if physical damage is present.\n"
    ),
}

    
    # Update the information display with the content for the selected topic
    info_display.config(state=tk.NORMAL)
    info_display.delete('1.0', tk.END)
    info_display.insert(tk.END, info_text.get(topic, "No information available."))
    info_display.config(state=tk.DISABLED)

# Function to create the GUI
def create_gui():
    global info_display  # Make info_display global to access it in show_information

    root = tk.Tk()
    root.title("Gator's Reference Tool")
    root.geometry("1000x600")

    # Create menu
    menubar = tk.Menu(root)
    file_menu = tk.Menu(menubar, tearoff=0)
    file_menu.add_command(label="Exit", command=root.quit)
    menubar.add_cascade(label="File", menu=file_menu)

    about_menu = tk.Menu(menubar, tearoff=0)
    about_menu.add_command(label="About", command=lambda: messagebox.showinfo("About", "Gator's Reference Tool\n©2024 Gator Tech"))
    menubar.add_cascade(label="About", menu=about_menu)

    root.config(menu=menubar)

    # Create main frame
    main_frame = ttk.Frame(root)
    main_frame.pack(fill=tk.BOTH, expand=True)

    # Create left frame for buttons
    left_frame = ttk.Frame(main_frame, width=200)
    left_frame.pack(side=tk.LEFT, fill=tk.Y, padx=5, pady=5)

    # Create right frame for information display
    right_frame = ttk.Frame(main_frame)
    right_frame.pack(side=tk.RIGHT, fill=tk.BOTH, expand=True, padx=5, pady=5)

    # Add a scrollbar to the left frame
    left_scrollbar = ttk.Scrollbar(left_frame, orient=tk.VERTICAL)
    left_scrollbar.pack(side=tk.RIGHT, fill=tk.Y)

    left_canvas = tk.Canvas(left_frame, yscrollcommand=left_scrollbar.set, width=200)
    left_canvas.pack(side=tk.LEFT, fill=tk.Y, expand=True)
    left_scrollbar.config(command=left_canvas.yview)

    # Add buttons to the left frame
    buttons_frame = ttk.Frame(left_canvas)
    left_canvas.create_window((0, 0), window=buttons_frame, anchor="nw")

    # List of topics
    topics = [
        "IPConfig", "Ping", "Tracert", "Route", "ARP", "Hostname", "Telnet", "SSH", 
        "NSLookup", "GetMac", "Systeminfo.exe", "Netstat", "SFC", "DISM", "shutdown", 
        "chkdsk", "NetSH", "DNS", "DHCP", "Services.MSC", "Control Panel", 
        "Network and Sharing Center", "VPN Creation", "Advanced System Settings", 
        "System Information"
    ]
    
    # Add buttons dynamically
    for topic in topics:
        btn = ttk.Button(buttons_frame, text=topic, command=lambda t=topic: show_information(t))
        btn.grid(sticky='ew', pady=2, padx=5)
    
    # Adjust the grid layout to ensure proper spacing
    buttons_frame.update_idletasks()
    left_canvas.config(scrollregion=left_canvas.bbox("all"))

    # Add a scrollbar to the right frame
    right_scrollbar = ttk.Scrollbar(right_frame, orient=tk.VERTICAL)
    right_scrollbar.pack(side=tk.RIGHT, fill=tk.Y)

    info_display = tk.Text(right_frame, wrap=tk.WORD, yscrollcommand=right_scrollbar.set)
    info_display.pack(side=tk.LEFT, fill=tk.BOTH, expand=True)
    right_scrollbar.config(command=info_display.yview)
    info_display.config(state=tk.DISABLED)

    root.mainloop()

# Start the GUI
create_gui()
